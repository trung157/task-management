version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: taskflow-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE:-taskflow_db}
      POSTGRES_USER: ${DB_USER:-taskflow_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-taskflow_password}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/db_schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./backend/migrations:/docker-entrypoint-initdb.d/migrations
    networks:
      - taskflow-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-taskflow_user} -d ${DB_DATABASE:-taskflow_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: taskflow-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - taskflow-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: taskflow-backend
    restart: unless-stopped
    ports:
      - "${PORT:-3000}:3000"
    environment:
      NODE_ENV: production
      PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_DATABASE: ${DB_DATABASE:-taskflow_db}
      DB_USER: ${DB_USER:-taskflow_user}
      DB_PASSWORD: ${DB_PASSWORD:-taskflow_password}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: ${JWT_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend/logs:/app/logs
    networks:
      - taskflow-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: taskflow-frontend
    restart: unless-stopped
    ports:
      - "8080:80"
    depends_on:
      - backend
    networks:
      - taskflow-network

networks:
  taskflow-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
